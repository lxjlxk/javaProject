<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suse.demo.mapper.ExamListMapper">
  <resultMap id="BaseResultMap" type="com.suse.demo.entity.ExamList">
    <id column="exam_id" jdbcType="VARCHAR" property="examId" />
    <result column="exam_paper" jdbcType="VARCHAR" property="examPaper" />
    <result column="exam_date" jdbcType="VARCHAR" property="examDate" />
    <result column="exam_publisher" jdbcType="VARCHAR" property="examPublisher" />
    <result column="exam_class" jdbcType="VARCHAR" property="examClass" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    exam_id, exam_paper, exam_date, exam_publisher, exam_class
  </sql>
  <select id="selectByExample" parameterType="com.suse.demo.entity.ExamListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_list
    where exam_id = #{examId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from exam_list
    where exam_id = #{examId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.suse.demo.entity.ExamListExample">
    delete from exam_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suse.demo.entity.ExamList">
    insert into exam_list (exam_id, exam_paper, exam_date, 
      exam_publisher, exam_class)
    values (#{examId,jdbcType=VARCHAR}, #{examPaper,jdbcType=VARCHAR}, #{examDate,jdbcType=VARCHAR}, 
      #{examPublisher,jdbcType=VARCHAR}, #{examClass,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.suse.demo.entity.ExamList">
    insert into exam_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examId != null">
        exam_id,
      </if>
      <if test="examPaper != null">
        exam_paper,
      </if>
      <if test="examDate != null">
        exam_date,
      </if>
      <if test="examPublisher != null">
        exam_publisher,
      </if>
      <if test="examClass != null">
        exam_class,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examId != null">
        #{examId,jdbcType=VARCHAR},
      </if>
      <if test="examPaper != null">
        #{examPaper,jdbcType=VARCHAR},
      </if>
      <if test="examDate != null">
        #{examDate,jdbcType=VARCHAR},
      </if>
      <if test="examPublisher != null">
        #{examPublisher,jdbcType=VARCHAR},
      </if>
      <if test="examClass != null">
        #{examClass,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suse.demo.entity.ExamListExample" resultType="java.lang.Long">
    select count(*) from exam_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_list
    <set>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=VARCHAR},
      </if>
      <if test="record.examPaper != null">
        exam_paper = #{record.examPaper,jdbcType=VARCHAR},
      </if>
      <if test="record.examDate != null">
        exam_date = #{record.examDate,jdbcType=VARCHAR},
      </if>
      <if test="record.examPublisher != null">
        exam_publisher = #{record.examPublisher,jdbcType=VARCHAR},
      </if>
      <if test="record.examClass != null">
        exam_class = #{record.examClass,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_list
    set exam_id = #{record.examId,jdbcType=VARCHAR},
      exam_paper = #{record.examPaper,jdbcType=VARCHAR},
      exam_date = #{record.examDate,jdbcType=VARCHAR},
      exam_publisher = #{record.examPublisher,jdbcType=VARCHAR},
      exam_class = #{record.examClass,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suse.demo.entity.ExamList">
    update exam_list
    <set>
      <if test="examPaper != null">
        exam_paper = #{examPaper,jdbcType=VARCHAR},
      </if>
      <if test="examDate != null">
        exam_date = #{examDate,jdbcType=VARCHAR},
      </if>
      <if test="examPublisher != null">
        exam_publisher = #{examPublisher,jdbcType=VARCHAR},
      </if>
      <if test="examClass != null">
        exam_class = #{examClass,jdbcType=VARCHAR},
      </if>
    </set>
    where exam_id = #{examId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suse.demo.entity.ExamList">
    update exam_list
    set exam_paper = #{examPaper,jdbcType=VARCHAR},
      exam_date = #{examDate,jdbcType=VARCHAR},
      exam_publisher = #{examPublisher,jdbcType=VARCHAR},
      exam_class = #{examClass,jdbcType=VARCHAR}
    where exam_id = #{examId,jdbcType=VARCHAR}
  </update>
</mapper>